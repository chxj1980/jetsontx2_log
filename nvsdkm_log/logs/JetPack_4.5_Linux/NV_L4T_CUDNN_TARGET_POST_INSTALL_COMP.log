Info: exec_command: ssh -t -q -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no tx2@192.168.55.1 "df -B1 / | tail -1 | awk '{ printf \$4 }'"
Info: NV_L4T_CUDNN_TARGET_POST_INSTALL_COMP include 3 package
Info: [ Package Install Started ]
Info: target deb installer start to install
Info: exec_command: dpkg -f /home/latelee/Downloads/nvidia/my_download/libcudnn8_8.0.0.180-1+cuda10.2_arm64.deb Package | tr -d '\n'
Info: exec_command: dpkg -f /home/latelee/Downloads/nvidia/my_download/libcudnn8_8.0.0.180-1+cuda10.2_arm64.deb Version | tr -d '\n'
Info: exec_command [target]:
**********************
#!/bin/bash
set -e
export LC_ALL=en_US.UTF-8 LANG=en_US.UTF-8 LANGUAGE=en_US.UTF-8
sudo mkdir -p /opt/nvidia/deb_repos
sudo chmod 777 /opt/nvidia/deb_repos
sudo rm -f /opt/nvidia/deb_repos/libcudnn8_8.0.0.180-1+cuda10.2_arm64.deb
**********************
Info: exec_command [target]:
**********************
#!/bin/bash
set -e
export LC_ALL=en_US.UTF-8 LANG=en_US.UTF-8 LANGUAGE=en_US.UTF-8

exec 3>&1
exec 1>&2
exec 2>&3
function safe_apt_install {
    echo "*begin $1, $2"
    tmp_log=/tmp/jetpack_dpkg_log.txt
    sudo rm -f $tmp_log
    set +e; $1 | tee $tmp_log; CMD_STATUS=${PIPESTATUS[0]}; set -e
    while [ ${CMD_STATUS} -ne 0 ]; do
        if grep -q -e "is locked by another process" -e "E: Could not get lock /var/" $tmp_log; then
           sudo rm -f $tmp_log
           set +e; $1 | tee $tmp_log; CMD_STATUS=${PIPESTATUS[0]}; set -e
           echo "Waiting $2 seconds for apt to be available"; sleep ${2}
        else
           echo "Unhandled error when running $1"; exit 1
        fi
    done
}
safe_apt_install "sudo dpkg -i /opt/nvidia/deb_repos/libcudnn8_8.0.0.180-1+cuda10.2_arm64.deb" 5
sleep 5
sudo rm -f /opt/nvidia/deb_repos/libcudnn8_8.0.0.180-1+cuda10.2_arm64.deb
**********************
Info: change working directory to /tmp
Info: exec_command: ssh -F /dev/null -q -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no tx2@192.168.55.1 "dpkg-query -W -f='\${db:Status-abbrev} \${Version}' libcudnn8"
Info: [ Package Install Finished Successfully ]
Info: [ Package Install Started ]
Info: target deb installer start to install
Info: exec_command: dpkg -f /home/latelee/Downloads/nvidia/my_download/libcudnn8-dev_8.0.0.180-1+cuda10.2_arm64.deb Package | tr -d '\n'
Info: exec_command: dpkg -f /home/latelee/Downloads/nvidia/my_download/libcudnn8-dev_8.0.0.180-1+cuda10.2_arm64.deb Version | tr -d '\n'
Info: exec_command [target]:
**********************
#!/bin/bash
set -e
export LC_ALL=en_US.UTF-8 LANG=en_US.UTF-8 LANGUAGE=en_US.UTF-8
sudo mkdir -p /opt/nvidia/deb_repos
sudo chmod 777 /opt/nvidia/deb_repos
sudo rm -f /opt/nvidia/deb_repos/libcudnn8-dev_8.0.0.180-1+cuda10.2_arm64.deb
**********************
Info: exec_command [target]:
**********************
#!/bin/bash
set -e
export LC_ALL=en_US.UTF-8 LANG=en_US.UTF-8 LANGUAGE=en_US.UTF-8

exec 3>&1
exec 1>&2
exec 2>&3
function safe_apt_install {
    echo "*begin $1, $2"
    tmp_log=/tmp/jetpack_dpkg_log.txt
    sudo rm -f $tmp_log
    set +e; $1 | tee $tmp_log; CMD_STATUS=${PIPESTATUS[0]}; set -e
    while [ ${CMD_STATUS} -ne 0 ]; do
        if grep -q -e "is locked by another process" -e "E: Could not get lock /var/" $tmp_log; then
           sudo rm -f $tmp_log
           set +e; $1 | tee $tmp_log; CMD_STATUS=${PIPESTATUS[0]}; set -e
           echo "Waiting $2 seconds for apt to be available"; sleep ${2}
        else
           echo "Unhandled error when running $1"; exit 1
        fi
    done
}
safe_apt_install "sudo dpkg -i /opt/nvidia/deb_repos/libcudnn8-dev_8.0.0.180-1+cuda10.2_arm64.deb" 5
sleep 5
sudo rm -f /opt/nvidia/deb_repos/libcudnn8-dev_8.0.0.180-1+cuda10.2_arm64.deb
**********************
Info: change working directory to /tmp
Info: exec_command: ssh -F /dev/null -q -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no tx2@192.168.55.1 "dpkg-query -W -f='\${db:Status-abbrev} \${Version}' libcudnn8-dev"
Info: [ Package Install Finished Successfully ]
Info: [ Package Install Started ]
Info: target deb installer start to install
Info: exec_command: dpkg -f /home/latelee/Downloads/nvidia/my_download/libcudnn8-doc_8.0.0.180-1+cuda10.2_arm64.deb Package | tr -d '\n'
Info: exec_command: dpkg -f /home/latelee/Downloads/nvidia/my_download/libcudnn8-doc_8.0.0.180-1+cuda10.2_arm64.deb Version | tr -d '\n'
Info: exec_command [target]:
**********************
#!/bin/bash
set -e
export LC_ALL=en_US.UTF-8 LANG=en_US.UTF-8 LANGUAGE=en_US.UTF-8
sudo mkdir -p /opt/nvidia/deb_repos
sudo chmod 777 /opt/nvidia/deb_repos
sudo rm -f /opt/nvidia/deb_repos/libcudnn8-doc_8.0.0.180-1+cuda10.2_arm64.deb
**********************
Info: exec_command [target]:
**********************
#!/bin/bash
set -e
export LC_ALL=en_US.UTF-8 LANG=en_US.UTF-8 LANGUAGE=en_US.UTF-8

exec 3>&1
exec 1>&2
exec 2>&3
function safe_apt_install {
    echo "*begin $1, $2"
    tmp_log=/tmp/jetpack_dpkg_log.txt
    sudo rm -f $tmp_log
    set +e; $1 | tee $tmp_log; CMD_STATUS=${PIPESTATUS[0]}; set -e
    while [ ${CMD_STATUS} -ne 0 ]; do
        if grep -q -e "is locked by another process" -e "E: Could not get lock /var/" $tmp_log; then
           sudo rm -f $tmp_log
           set +e; $1 | tee $tmp_log; CMD_STATUS=${PIPESTATUS[0]}; set -e
           echo "Waiting $2 seconds for apt to be available"; sleep ${2}
        else
           echo "Unhandled error when running $1"; exit 1
        fi
    done
}
safe_apt_install "sudo dpkg -i /opt/nvidia/deb_repos/libcudnn8-doc_8.0.0.180-1+cuda10.2_arm64.deb" 5
sleep 5
sudo rm -f /opt/nvidia/deb_repos/libcudnn8-doc_8.0.0.180-1+cuda10.2_arm64.deb
**********************
Info: change working directory to /tmp
Info: exec_command: ssh -F /dev/null -q -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no tx2@192.168.55.1 "dpkg-query -W -f='\${db:Status-abbrev} \${Version}' libcudnn8-doc"
Info: [ Package Install Finished Successfully ]
Info: exec_command: ssh -t -q -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no tx2@192.168.55.1 "df -B1 / | tail -1 | awk '{ printf \$4 }'"
Info: [target] [ 2.25 GB used. Disk Avail: 18.79 GB ]
Info: [ NV_L4T_CUDNN_TARGET_POST_INSTALL_COMP Install took 2m26s ]
